{
	"info": {
		"_postman_id": "47a11d50-f2e3-4b9f-b3f0-7fe6f4e00469",
		"name": "RUCKUS Cloud JWT API New Endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9262131"
	},
	"item": [
		{
			"name": "Walkthrough",
			"item": [
				{
					"name": "Get token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"baseUrl\", \"https://api.ruckus.cloud\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"tenantId\", jsonData.tenantId);",
									"pm.collectionVariables.set(\"jwt\", jsonData.jwt);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"your.email@ruckuswireless.com\",\n    \"password\": \"your_password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get tenant details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"mspAdminId\", jsonData.admins[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tenants/self?deep=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenants",
								"self"
							],
							"query": [
								{
									"key": "deep",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create venue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"venueId\", jsonData.response.id);",
									"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Building 400\",\n    \"address\": {\n        \"city\": \"San Jose\",\n        \"country\": \"United States\",\n        \"timezone\": \"America/Los_Angeles\",\n        \"addressLine\": \"390 Java Dr\",\n        \"latitude\": 37.4112751,\n        \"longitude\": -122.0191908\n    },\n    \"description\": \"Building 400\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/venues",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"venues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get status of asynchronous request",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/activities/{{requestId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities",
								"{{requestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get venues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"venueId\", jsonData[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-rks-tenantid",
								"value": "{{mspEcTenantId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/venues",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"venues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add AP to venue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"apSerialNumber\", \"111111111111\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"R550\",\n        \"serialNumber\": \"{{apSerialNumber}}\",\n        \"venueId\": \"{{venueId}}\",\n        \"description\": \"This is my R550 in the office\",\n        \"tags\": [\n            \"Test\"\n        ]\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/venues/aps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"venues",
								"aps"
							]
						},
						"description": "Use this API command to add a list of new APs."
					},
					"response": []
				},
				{
					"name": "Get APs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"apSerialNumber\", jsonData[0].serialNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/venues/aps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"venues",
								"aps"
							]
						},
						"description": "Use this API command to get the network list."
					},
					"response": []
				},
				{
					"name": "Get AP details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/venues/aps/{{apSerialNumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"venues",
								"aps",
								"{{apSerialNumber}}"
							]
						},
						"description": "Use this API command to get the network list."
					},
					"response": []
				},
				{
					"name": "Add switch to venue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"switchSerialNumber\", \"AAAAAAAAAAA\");",
									"pm.collectionVariables.set(\"name\", \"ICX7150-A\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"{{name}}\",\n        \"id\": \"{{switchSerialNumber}}\",\n        \"description\": \"\",\n        \"venueId\": \"{{venueId}}\",\n        \"stackMembers\": [],\n        \"trustPorts\": [],\n        \"enableStack\": false,\n        \"jumboMode\": false,\n        \"igmpSnooping\": \"none\",\n        \"spanningTreePriority\": \"\",\n        \"initialVlanId\": \"\",\n        \"rearModule\": \"none\",\n        \"specifiedType\": \"AUTO\"\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/switches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"switches"
							]
						},
						"description": "Use this API command to add a list of new APs."
					},
					"response": []
				},
				{
					"name": "Get switches",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"switchMac\", jsonData[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/switches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"switches"
							]
						},
						"description": "Use this API command to add a list of new APs."
					},
					"response": []
				},
				{
					"name": "Create network",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"ssid\", \"R1\");",
									"pm.collectionVariables.set(\"passphrase\", \"ruckus123!\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"networkId\", jsonData.response.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"wlan\": {\n        \"ssid\": \"{{ssid}}\",\n        \"advancedCustomization\": {\n            \"maxClientsOnWlanPerRadio\": 100,\n            \"enableBandBalancing\": true,\n            \"clientIsolation\": false,\n            \"clientIsolationOptions\": {\n                \"autoVrrp\": false\n            },\n            \"hideSsid\": false,\n            \"forceMobileDeviceDhcp\": false,\n            \"clientLoadBalancingEnable\": true,\n            \"directedThreshold\": 5,\n            \"enableNeighborReport\": true,\n            \"enableFastRoaming\": false,\n            \"mobilityDomainId\": 1,\n            \"radioCustomization\": {\n                \"rfBandUsage\": \"BOTH\",\n                \"bssMinimumPhyRate\": \"default\",\n                \"phyTypeConstraint\": \"OFDM\",\n                \"managementFrameMinimumPhyRate\": \"6\"\n            },\n            \"enableSyslog\": false,\n            \"clientInactivityTimeout\": 120,\n            \"accessControlEnable\": false,\n            \"respectiveAccessControl\": true,\n            \"vlanPool\": null,\n            \"applicationPolicyEnable\": false,\n            \"l2AclEnable\": false,\n            \"l3AclEnable\": false,\n            \"wifiCallingEnabled\": false,\n            \"wifiCallingIds\": [],\n            \"proxyARP\": false,\n            \"enableAirtimeDecongestion\": false,\n            \"enableJoinRSSIThreshold\": false,\n            \"joinRSSIThreshold\": -85,\n            \"enableTransientClientManagement\": false,\n            \"joinWaitTime\": 30,\n            \"joinExpireTime\": 300,\n            \"joinWaitThreshold\": 10,\n            \"enableOptimizedConnectivityExperience\": false,\n            \"broadcastProbeResponseDelay\": 15,\n            \"rssiAssociationRejectionThreshold\": -75,\n            \"enableAntiSpoofing\": false,\n            \"enableArpRequestRateLimit\": true,\n            \"arpRequestRateLimit\": 15,\n            \"enableDhcpRequestRateLimit\": true,\n            \"dhcpRequestRateLimit\": 15,\n            \"dnsProxyEnabled\": false\n        },\n        \"wlanSecurity\": \"WPA2Personal\",\n        \"macAddressAuthentication\": false,\n        \"vlanId\": 1,\n        \"enabled\": true,\n        \"macAuthMacFormat\": \"UpperDash\",\n        \"managementFrameProtection\": \"Disabled\",\n        \"passphrase\": \"{{passphrase}}\"\n    },\n    \"name\": \"{{ssid}}\",\n    \"type\": \"psk\",\n    \"description\": \"\",\n    \"venues\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/networks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get networks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"networkId\", jsonData[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/networks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks"
							]
						},
						"description": "Use this API command to get the network list."
					},
					"response": []
				},
				{
					"name": "Get network details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/networks/{{networkId}}?deep=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								"{{networkId}}"
							],
							"query": [
								{
									"key": "deep",
									"value": "true"
								}
							]
						},
						"description": "Use this API command to get the network list."
					},
					"response": []
				},
				{
					"name": "Create venue-network association",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"venueId\": \"{{venueId}}\",\n    \"dual5gEnabled\": true,\n    \"tripleBandEnabled\": false,\n    \"networkId\": \"{{networkId}}\",\n    \"allApGroupsRadio\": \"Both\",\n    \"allApGroupsRadioTypes\": [\n        \"2.4-GHz\",\n        \"5-GHz\"\n    ],\n    \"isAllApGroups\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/networkActivations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkActivations"
							]
						},
						"description": "Use this API command to get venue-network association list"
					},
					"response": []
				},
				{
					"name": "Get venue-network association",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"networkVenueId\", jsonData.data[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"venueId\": \"{{venueId}}\",\n    \"networkId\": \"{{networkId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/networkActivations/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkActivations",
								"query"
							]
						},
						"description": "Use this API command to get venue-network association list"
					},
					"response": []
				},
				{
					"name": "Change AP radio parameters at the venue level",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"radioParams24G\": {\n        \"allowedChannels\": [\n            \"1\",\n            \"6\",\n            \"11\"\n        ],\n        \"channelBandwidth\": \"AUTO\",\n        \"method\": \"BACKGROUND_SCANNING\",\n        \"changeInterval\": 33,\n        \"scanInterval\": 20,\n        \"txPower\": \"Auto\"\n    },\n    \"radioParams50G\": {\n        \"allowedIndoorChannels\": [\n            \"36\",\n            \"144\"\n        ],\n        \"allowedOutdoorChannels\": [\n            \"36\",\n            \"144\"\n        ],\n        \"channelBandwidth\": \"AUTO\",\n        \"method\": \"BACKGROUND_SCANNING\",\n        \"changeInterval\": 33,\n        \"scanInterval\": 20,\n        \"txPower\": \"Auto\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/venues/{{venueId}}/radioSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"venues",
								"{{venueId}}",
								"radioSettings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AP-venue radio settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/venues/{{venueId}}/radioSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"venues",
								"{{venueId}}",
								"radioSettings"
							]
						},
						"description": "Use this API command to get the network list."
					},
					"response": []
				},
				{
					"name": "Change radio parameters in a single AP",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enable24G\": true,\n    \"enable50G\": true,\n    \"enable6G\": false,\n    \"apRadioParams24G\": {\n        \"allowedChannels\": [\n            \"1\",\n            \"6\",\n            \"11\"\n        ],\n        \"channelBandwidth\": \"AUTO\",\n        \"method\": \"BACKGROUND_SCANNING\",\n        \"changeInterval\": 33,\n        \"txPower\": \"-3\",\n        \"manualChannel\": 0\n    },\n    \"apRadioParams50G\": {\n        \"allowedChannels\": [\n            \"149\",\n            \"153\",\n            \"157\",\n            \"161\",\n            \"165\"\n        ],\n        \"channelBandwidth\": \"20MHz\",\n        \"method\": \"BACKGROUND_SCANNING\",\n        \"changeInterval\": 33,\n        \"txPower\": \"-3\",\n        \"manualChannel\": 0\n    },\n    \"apRadioParamsDual5G\": null,\n    \"apRadioParams6G\": null,\n    \"useVenueSettings\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/venues/aps/{{apSerialNumber}}/radioSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"venues",
								"aps",
								"{{apSerialNumber}}",
								"radioSettings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configure 802.11r and 802.11k",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"enableNeighborReport\", true);",
									"pm.collectionVariables.set(\"enableFastRoaming\", true);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"psk\",\n    \"wlan\": {\n        \"wlanSecurity\": \"WPA2Personal\",\n        \"advancedCustomization\": {\n            \"userUplinkRateLimiting\": 0,\n            \"userDownlinkRateLimiting\": 0,\n            \"totalUplinkRateLimiting\": 0,\n            \"totalDownlinkRateLimiting\": 0,\n            \"maxClientsOnWlanPerRadio\": 100,\n            \"enableBandBalancing\": true,\n            \"clientIsolation\": false,\n            \"clientIsolationOptions\": {\n                \"autoVrrp\": false\n            },\n            \"hideSsid\": false,\n            \"forceMobileDeviceDhcp\": false,\n            \"clientLoadBalancingEnable\": true,\n            \"directedThreshold\": 5,\n            \"enableNeighborReport\": \"{{enableNeighborReport}}\",\n            \"enableFastRoaming\": \"{{enableFastRoaming}}\",\n            \"mobilityDomainId\": 1,\n            \"radioCustomization\": {\n                \"rfBandUsage\": \"BOTH\",\n                \"bssMinimumPhyRate\": \"default\",\n                \"phyTypeConstraint\": \"OFDM\",\n                \"managementFrameMinimumPhyRate\": \"6\"\n            },\n            \"enableSyslog\": false,\n            \"clientInactivityTimeout\": 120,\n            \"accessControlEnable\": false,\n            \"respectiveAccessControl\": true,\n            \"applicationPolicyEnable\": false,\n            \"l2AclEnable\": false,\n            \"l3AclEnable\": false,\n            \"wifiCallingEnabled\": false,\n            \"proxyARP\": false,\n            \"enableAirtimeDecongestion\": false,\n            \"enableJoinRSSIThreshold\": false,\n            \"joinRSSIThreshold\": -85,\n            \"enableTransientClientManagement\": false,\n            \"joinWaitTime\": 30,\n            \"joinExpireTime\": 300,\n            \"joinWaitThreshold\": 10,\n            \"enableOptimizedConnectivityExperience\": false,\n            \"broadcastProbeResponseDelay\": 15,\n            \"rssiAssociationRejectionThreshold\": -75,\n            \"enableAntiSpoofing\": false,\n            \"enableArpRequestRateLimit\": true,\n            \"arpRequestRateLimit\": 15,\n            \"enableDhcpRequestRateLimit\": true,\n            \"dhcpRequestRateLimit\": 15,\n            \"dnsProxyEnabled\": false\n        },\n        \"macAddressAuthentication\": false,\n        \"macAuthMacFormat\": \"UpperDash\",\n        \"managementFrameProtection\": \"Disabled\",\n        \"vlanId\": 1,\n        \"ssid\": \"{{ssid}}\",\n        \"enabled\": true,\n        \"passphrase\": \"ruckus123!\"\n    },\n    \"tenantId\": \"63beff64a799410987164fc99e02039b\",\n    \"venues\": [\n        {\n            \"venueId\": \"28e056b381784443827bb7d971b46583\",\n            \"tripleBandEnabled\": false,\n            \"networkId\": \"a12fdf30235844998efcd7b247a077df\",\n            \"allApGroupsRadio\": \"Both\",\n            \"allApGroupsRadioTypes\": [\n                \"2.4-GHz\",\n                \"5-GHz\"\n            ],\n            \"isAllApGroups\": true,\n            \"id\": \"fb97e625ac404dacaccb85486f57198c\"\n        }\n    ],\n    \"name\": \"{{ssid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/networks/{{networkId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								"{{networkId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get clients",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"clientMac\", jsonData[0].mac);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get client details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clients/{{clientMac}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clients",
								"{{clientMac}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ICX VLAN profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"vlanProfileId\", jsonData.response.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"VLAN 120 and 121\",\n    \"name\": \"vlan 120-121\",\n    \"profileType\": \"Regular\",\n    \"venues\": [\n        \"{{venueId}}\"\n    ],\n    \"vlans\": [\n        {\n            \"rootBridgeFamilyId\": \"ICX7150\",\n            \"spanningTreePriority\": 0,\n            \"spanningTreeProtocol\": \"rstp\",\n            \"vlanId\": 120,\n            \"vlanName\": \"Test1\"\n        },\n                {\n            \"rootBridgeFamilyId\": \"ICX7150\",\n            \"spanningTreePriority\": 0,\n            \"spanningTreeProtocol\": \"rstp\",\n            \"vlanId\": 121,\n            \"vlanName\": \"Test2\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/switchProfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"switchProfiles"
							]
						},
						"description": "Use this API command to get venue-network association list"
					},
					"response": []
				},
				{
					"name": "Get ICX switch profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"switchPortProfile\", jsonData[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/switchProfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"switchProfiles"
							]
						},
						"description": "Use this API command to get venue-network association list"
					},
					"response": []
				},
				{
					"name": "Get ICX switch ports",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/switches/{{switchMac}}/portSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"switches",
								"{{switchMac}}",
								"portSettings"
							]
						},
						"description": "Use this API command to get venue-network association list"
					},
					"response": []
				},
				{
					"name": "Get ICX switch port details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"port\", \"1/1/8\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{port}}\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/switches/{{switchMac}}/portSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"switches",
								"{{switchMac}}",
								"portSettings"
							]
						},
						"description": "Use this API command to get venue-network association list"
					},
					"response": []
				},
				{
					"name": "Get ICX switch VLANs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/switches/{{switchMac}}/vlans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"switches",
								"{{switchMac}}",
								"vlans"
							]
						},
						"description": "Use this API command to get venue-network association list"
					},
					"response": []
				},
				{
					"name": "Change ICX switch port",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"switchId\": \"{{switchMac}}\",\n        \"port\": {\n            \"name\": \"Nine\",\n            \"portEnable\": true,\n            \"poeEnable\": true,\n            \"poeClass\": \"ZERO\",\n            \"poePriority\": 3,\n            \"poeBudget\": \"\",\n            \"voiceVlan\": \"\",\n            \"portProtected\": false,\n            \"lldpEnable\": true,\n            \"portSpeed\": \"AUTO\",\n            \"rstpAdminEdgePort\": false,\n            \"stpBpduGuard\": false,\n            \"stpRootGuard\": false,\n            \"dhcpSnoopingTrust\": false,\n            \"ipsg\": false,\n            \"lldpQos\": [],\n            \"ingressAcl\": \"\",\n            \"egressAcl\": \"\",\n            \"tags\": \"\",\n            \"revert\": false,\n            \"ignoreFields\": \"untaggedVlan,taggedVlans\",\n            \"port\": \"1/1/8\",\n            \"ports\": [\n                \"1/1/8\"\n            ]\n        }\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/switches/portSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"switches",
								"portSettings"
							]
						},
						"description": "Use this API command to get venue-network association list"
					},
					"response": []
				},
				{
					"name": "Delete venue-network association",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{networkVenueId}}\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/networkActivations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkActivations"
							]
						},
						"description": "Use this API command to get venue-network association list"
					},
					"response": []
				},
				{
					"name": "Delete network",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{networkId}}\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/networks/{{networkId}}?deep=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								"{{networkId}}"
							],
							"query": [
								{
									"key": "deep",
									"value": "true"
								}
							]
						},
						"description": "Use this API command to get the network list."
					},
					"response": []
				},
				{
					"name": "Delete AP",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{apSerialNumber}}\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/venues/aps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"venues",
								"aps"
							]
						},
						"description": "Use this API command to add a list of new APs."
					},
					"response": []
				},
				{
					"name": "Delete ICX VLAN profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{switchPortProfile}}\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/switchProfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"switchProfiles"
							]
						},
						"description": "Use this API command to get venue-network association list"
					},
					"response": []
				},
				{
					"name": "Delete switch",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/switches/{{switchMac}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"switches",
								"{{switchMac}}"
							]
						},
						"description": "Use this API command to add a list of new APs."
					},
					"response": []
				},
				{
					"name": "Delete venue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "x-rks-tenantid",
								"value": "{{mspEcTenantId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{venueId}}\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/venues",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"venues"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "mspId",
			"value": ""
		},
		{
			"key": "customerId",
			"value": ""
		},
		{
			"key": "tenantId",
			"value": ""
		},
		{
			"key": "mspEcTenantId",
			"value": ""
		},
		{
			"key": "mspTenantId",
			"value": ""
		},
		{
			"key": "mspEcId",
			"value": ""
		},
		{
			"key": "mspAdminId",
			"value": ""
		},
		{
			"key": "venueId",
			"value": ""
		},
		{
			"key": "serialNumber",
			"value": ""
		},
		{
			"key": "switchSerialNumber",
			"value": ""
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "ssid",
			"value": ""
		},
		{
			"key": "passphrase",
			"value": ""
		},
		{
			"key": "networkId",
			"value": ""
		},
		{
			"key": "networkVenueId",
			"value": ""
		},
		{
			"key": "apSerialNumber",
			"value": ""
		},
		{
			"key": "clientMac",
			"value": ""
		},
		{
			"key": "enableNeighborReport",
			"value": ""
		},
		{
			"key": "enableFastRoaming",
			"value": ""
		},
		{
			"key": "jwt",
			"value": ""
		},
		{
			"key": "switchMac",
			"value": ""
		},
		{
			"key": "port",
			"value": ""
		},
		{
			"key": "vlanProfileId",
			"value": ""
		},
		{
			"key": "requestId",
			"value": "7e29985d-10a4-45f6-a09a-4d11b984ff1f",
			"type": "string"
		},
		{
			"key": "venueNetworkId",
			"value": ""
		},
		{
			"key": "switchPortProfile",
			"value": ""
		}
	]
}